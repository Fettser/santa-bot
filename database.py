from loader import db
from asyncpg import Connection


class DBCommand:
    pool: Connection = db
    ADD_NEW_USER = "INSERT INTO members(name, index, email, user_id, city, street, interests)" \
                   " VALUES ($1, $2, $3, $4, $5, $6, $7)"
    REMOVE_USER = "DELETE FROM members WHERE user_id=$1"
    GET_ALL_USER = "SELECT * FROM members"
    GET_USER = "SELECT * FROM members WHERE user_id=$1"
    UPDATE_SEND = "UPDATE members SET send=true WHERE user_id=$1"
    UPDATE_GET = "UPDATE members SET get=true WHERE user_id=$1"

    async def add_new_user(self, name, index, email, user_id, city, street, interests):
        args = name, index, email, user_id, city, street, interests
        command = self.ADD_NEW_USER
        resp = await self.pool.fetchval(self.GET_USER, user_id)
        if resp is None:
            msg = '–¢–≤–æ—è –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!\n\n' \
                  '–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–Ω–µ—Ç—Å—è –≤—Å–µ —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ, ' \
                  '–∞ –ø–æ–∫–∞ —Å–ª–µ–¥–∏ –∑–∞ —Ä–∞—Å—Å—ã–ª–∫–æ–π –≤ –±–æ—Ç–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é ü•∞\n\n' \
                  '–ï—Å–ª–∏ —Ç—ã –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª(–∞) —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É" ' \
                  '–∏ –∑–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É –ø–æ–≤—Ç–æ—Ä–Ω–æ.'
            await self.pool.fetchval(command, *args)
            return msg
        else:
            msg = '–¢–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å. –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–Ω–æ–≤–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—á–∞—Å—Ç–∏–µ, ' \
                  '–Ω–∞–∂–º–∏ "–£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É" ' \
                  '–∏ –∑–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É –ø–æ–≤—Ç–æ—Ä–Ω–æ.'
            return msg

    async def remove_user(self, user_id):
        resp = await self.pool.fetchval(self.GET_USER, user_id)
        if resp is None:
            msg = '–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É, –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å –µ–µ!'
            return msg
        else:
            await self.pool.fetchval(self.REMOVE_USER, user_id)
            msg = '–¢—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã'
            return msg

    async def get_all_users(self):
        subs = await self.pool.fetch(self.GET_ALL_USER)
        new_subs = []
        for s in subs:
            new_subs.append(tuple(s))
        return new_subs

    async def update_send(self, user_id):
        command = self.UPDATE_SEND
        resp = await self.pool.fetchval(self.GET_USER, user_id)
        if resp is None:
            msg = '–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!'
            return msg
        else:
            await self.pool.fetchval(command, user_id)
            msg = '–î–µ–π—Å—Ç–≤–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!'
            return msg

    async def update_get(self, user_id):
        command = self.UPDATE_GET
        resp = await self.pool.fetchval(self.GET_USER, user_id)
        if resp is None:
            msg = '–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!'
            return msg
        else:
            await self.pool.fetchval(command, user_id)
            msg = '–î–µ–π—Å—Ç–≤–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!'
            return msg
